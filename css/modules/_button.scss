@import "../theme";

.button {
    padding: 16px 32px;
    background: none;
    border-radius: 5px;
    border: 2px solid $text;
    color: $text;
    font-weight: 500;
    font-size: $fontSmall;

    &:active {
        border-color: $primary;
        background-color: $primary;
        transition: 0s;
        filter: brightness(100%);
    }

    @media (max-width: $brkpDesctop) {
        font-size: calc($fontSmall - 4px);
        padding: 11px 24px;
    }

    @media (max-width: $brkpMobile) {
        font-size: calc($fontSmall - 6px);
        padding: 9px 24px;
    }
}

.button--primary {
    background-color: $primary;
    border: none;
    font-weight: 600;
    $fontttsize: $fontMedium;
    padding: 24px 40px;
    font-size: $fontttsize;

    &:active {
        background-color: red;
        filter: brightness(100%);
    }

    @media (max-width: $brkpDesctop) {
        font-size: calc($fontttsize - 6px);
        padding: 18px 32px;
    }

    @media (max-width: $brkpDesctopMin) {
        font-size: calc($fontttsize - 8px);
        padding: 16px 28px;
    }

    @media (max-width: $brkpTablet) {
        font-size: calc($fontttsize - 9px);
        padding: 16px 24px;
    }

    @media (max-width: $brkpMobileMin) {
        font-size: calc($fontttsize - 11px);
        padding: 14px 14px;
    }
}

.button--secondary {
    border: none;
    color: $secondaryText;

    &:active {
        background: none;
        color: $primary;
        transition: 0s;
    }
}

.active {
    border-color: $primary;
    background-color: $primary;

    &:hover {
        filter: brightness(100%);
    }
}

.withTransform {
    transition: 0.2s;
    margin-top: 6px;
    padding: 16px 24px;

    &:hover {
        transform: translateY(-6px);
    }
}

$array: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' viewBox='0 0 32 32' fill='none'%3E%3Cpath d='M10.668 14.6719L16.0013 18.5119L21.3346 14.6719' stroke='red' stroke-width='2.66667' stroke-linecap='round' stroke-linejoin='round'/%3E%3C/svg%3E");

.withArray {
    &::after {
        content: $array
    }
}